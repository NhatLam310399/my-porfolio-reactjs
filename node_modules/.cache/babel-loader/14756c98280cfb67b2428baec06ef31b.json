{"ast":null,"code":"var _jsxFileName = \"/home/lam-front-end-dev/Documents/WORK/MYJOB/my-porfolio-reactjs/my-porfolio/src/components/TypingText/index.tsx\";\nimport ReactTypingEffect from \"react-typing-effect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TypingText = props => {\n  const {\n    renderText,\n    text = \"\"\n  } = props;\n\n  const renderTextDisplay = (text, index) => {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ReactTypingEffect, {\n    text: text,\n    displayTextRenderer: (text, i) => {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: text.split(\"\").map((char, i) => {\n          const key = `${i}`;\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            style: i % 2 === 0 ? {\n              color: \"magenta\"\n            } : {},\n            children: char\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TypingText;\nexport default TypingText;\n\nvar _c;\n\n$RefreshReg$(_c, \"TypingText\");","map":{"version":3,"sources":["/home/lam-front-end-dev/Documents/WORK/MYJOB/my-porfolio-reactjs/my-porfolio/src/components/TypingText/index.tsx"],"names":["ReactTypingEffect","TypingText","props","renderText","text","renderTextDisplay","index","i","split","map","char","key","color"],"mappings":";AAAA,OAAOA,iBAAP,MAA8B,qBAA9B;;;AAKA,MAAMC,UAAsC,GAAGC,KAAK,IAAI;AACtD,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,IAAI,GAAG;AAArB,MAA4BF,KAAlC;;AACA,QAAMG,iBAAiB,GAAG,CAACD,IAAD,EAAeE,KAAf,KAAiC;AACzD,wBAAO;AAAA,gBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD;;AAGA,sBACE,QAAC,iBAAD;AACE,IAAA,IAAI,EAAEA,IADR;AAEE,IAAA,mBAAmB,EAAE,CAACA,IAAD,EAAeG,CAAf,KAA6B;AAChD,0BACE;AAAA,kBACGH,IAAI,CAACI,KAAL,CAAW,EAAX,EAAeC,GAAf,CAAmB,CAACC,IAAD,EAAOH,CAAP,KAAa;AAC/B,gBAAMI,GAAG,GAAI,GAAEJ,CAAE,EAAjB;AACA,8BACE;AAAgB,YAAA,KAAK,EAAEA,CAAC,GAAG,CAAJ,KAAU,CAAV,GAAc;AAAEK,cAAAA,KAAK,EAAE;AAAT,aAAd,GAAqC,EAA5D;AAAA,sBACGF;AADH,aAAWC,GAAX;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD,SAPA;AADH;AAAA;AAAA;AAAA;AAAA,cADF;AAYD;AAfH;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAxBD;;KAAMV,U;AAyBN,eAAeA,UAAf","sourcesContent":["import ReactTypingEffect from \"react-typing-effect\";\ninterface ITypingTextProps {\n  text: string;\n  renderText: (text: string, index: number) => void;\n}\nconst TypingText: React.FC<ITypingTextProps> = props => {\n  const { renderText, text = \"\" } = props;\n  const renderTextDisplay = (text: string, index: number) => {\n    return <h1>{text}</h1>;\n  };\n  return (\n    <ReactTypingEffect\n      text={text}\n      displayTextRenderer={(text: string, i: number) => {\n        return (\n          <h1>\n            {text.split(\"\").map((char, i) => {\n              const key = `${i}`;\n              return (\n                <span key={key} style={i % 2 === 0 ? { color: \"magenta\" } : {}}>\n                  {char}\n                </span>\n              );\n            })}\n          </h1>\n        );\n      }}\n    />\n  );\n};\nexport default TypingText;\n"]},"metadata":{},"sourceType":"module"}